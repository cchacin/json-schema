#macro ( writePackage $packageName )
package ${packageName};
#end

#macro ( writeFields $elements )
    #foreach($element in $elements)
        #if($element.value.nodeType == "STRING")
            #set ($type = "String")
        #elseif($element.value.nodeType == "NUMBER")
            #set ($type = "Integer")
        #elseif($element.value.nodeType == "BOOLEAN")
            #set ($type = "Boolean")
        #elseif($element.value.nodeType == "OBJECT")
            #writeInnerClass ( ${display.capitalize($element.key)} $element.value )
            #set ($type = "${display.capitalize($element.key)}DTO")
        #end
    #writeField ($type $element.key)
    #end
#end

#macro ( writeField $type $name )
public $type $name;
#end

#macro ( writeInnerClass $className $node )
public final class ${className}DTO {
#writeFields ( $node.fields() )
}
#end

#writePackage ( $packageName )

public final class ${className}JsonSchema {
#writeFields ( $json.fields() )
}
